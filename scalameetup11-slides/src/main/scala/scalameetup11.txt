| Akka HTTP(s) with Swagger and GraphQL

---

This presentation slides are built with REPLesent!

REPLesent is a neat little tool to build presentations
using the Scala REPL.

---

Agenda

- Akka HTTPS
- Swagger
- GraphQL

---

What is an SSL Certificate?

- SSL stands for Secure Sockets Layer, the protocol which
provides the encryption.
- SSL Certificates provide secure, encrypted communications between a website
and an internet browser.
- SSL Certificates are typically installed on pages that require end-users to
submit sensitive information over the internet like credit card details or
passwords.
- Example pages include payment pages, online forms and login pages.
- Securing our application with an SSL certificate is extremely important.
In most of the situations we require a trusted certificate(generated by
CA-Certification Authority), but there are many cases where you can use a
self-signed certificate.

---

OpenSSL

We need create a self-signed SSL Certificate using OpenSSL



---

Akka HTTPS

We can handle HTTPS request with Akka HTTPS Server

- We need a generated KeyStore
```
val keystore: InputStream = getClass.getClassLoader
.getResourceAsStream("keystore.pkcs12")
```

- We need to provide the password for the generated KeyStore

```
val password: Array[Char] = "password".toCharArray
ks.load(keystore, password)
```

- We need KeyManagerFactory and TrustManagerFactory to initialize SSLContext.

```
val keyManagerFactory: KeyManagerFactory = KeyManagerFactory.
getInstance("SunX509")
val tmf: TrustManagerFactory = TrustManagerFactory.getInstance("SunX509")
```

---




References

- https://blog.knoldus.com/2016/10/18/create-a-self-signed-ssl-certificate-using-openssl/
- https://blog.knoldus.com/2016/10/26/how-to-create-a-keystore-in-pkcs12-format/
- https://blog.knoldus.com/2017/01/17/handling-https-requests-with-akka-https-server/
- https://doc.akka.io/docs/akka-http/10.0.9/scala/http/server-side-https-support.html#using-https-scala

---
| Thank you for coming!

| Q&A/Comments?/Suggestions?
